warp::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:68:19: 68:60}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (HashMap<std::string::String, std::string::String>,), Error = Rejection> + std::marker::Copy>, fn(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>, HashMap<std::string::String, std::string::String>) -> impl warp::Future<Output = Result<impl Reply, Rejection>> {handle_save_file}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (HashMap<std::string::String, std::string::String>,), Error = Rejection> + std::marker::Copy>, fn(HashMap<std::string::String, std::string::String>) -> impl warp::Future<Output = Result<impl Reply, Rejection>> {handle_load_file}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<main::{closure#0}::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Theme>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:96:19: 96:39}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, Exact<warp::path::internal::Opaque<main::{closure#0}::__StaticPath>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::string::String,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Theme>>>,), Error = Infallible> + Clone>, fn(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Theme>>>) -> impl warp::Future<Output = Result<impl Reply, Rejection>> {handle_get_theme}>>, warp::filter::and_then::AndThen<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::sync::Arc<(dyn Extension + 'static)>>>>,), Error = Infallible> + Clone>, fn(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::sync::Arc<(dyn Extension + 'static)>>>>) -> impl warp::Future<Output = Result<impl Reply, Rejection>> {handle_list_extensions}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::sync::Arc<(dyn Extension + 'static)>>>>,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::sync::Arc<(dyn Extension + 'static)>>>>,), Error = Infallible> + Clone>, fn(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::sync::Arc<(dyn Extension + 'static)>>>>, extensions::CustomExtension) -> impl warp::Future<Output = Result<impl Reply, Rejection>> {handle_add_extension}>>>
