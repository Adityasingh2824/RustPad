{"$message_type":"diagnostic","message":"cannot find type `Theme` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1112,"byte_end":1162,"line_start":38,"line_end":38,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"type Themes = Arc<Mutex<HashMap<String, String>>>; // Stores theme information","highlight_start":1,"highlight_end":51}],"label":"similarly named type alias `Themes` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1616,"byte_end":1621,"line_start":46,"line_end":46,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"    let themes: Arc<Mutex<HashMap<String, Theme>>> = initialize_themes(); // Initialize predefined themes","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a type alias with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1616,"byte_end":1621,"line_start":46,"line_end":46,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"    let themes: Arc<Mutex<HashMap<String, Theme>>> = initialize_themes(); // Initialize predefined themes","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":"Themes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"use crate::storage::theme::Theme;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `Theme` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:46:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Themes = Arc<Mutex<HashMap<String, String>>>; // Stores theme information\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named type alias `Themes` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let themes: Arc<Mutex<HashMap<String, Theme>>> = initialize_themes(); // Initialize predefined themes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a type alias with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let themes: Arc<Mutex<HashMap<String, \u001b[0m\u001b[0m\u001b[38;5;10mThemes\u001b[0m\u001b[0m>>> = initialize_themes(); // Initialize predefined themes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::storage::theme::Theme;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `verify_session` in module `crate::auth::session`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8069,"byte_end":8083,"line_start":215,"line_end":215,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"    if !crate::auth::session::verify_session(&sessions, session_id).await {","highlight_start":31,"highlight_end":45}],"label":"not found in `crate::auth::session`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `verify_session` in module `crate::auth::session`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:215:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !crate::auth::session::verify_session(&sessions, session_id).await {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `crate::auth::session`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `SystemTime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\storage\\file_storage.rs","byte_start":92,"byte_end":102,"line_start":4,"line_end":4,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"use std::time::{SystemTime, UNIX_EPOCH};","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\storage\\file_storage.rs","byte_start":91,"byte_end":92,"line_start":4,"line_end":4,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"use std::time::{SystemTime, UNIX_EPOCH};","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\storage\\file_storage.rs","byte_start":92,"byte_end":104,"line_start":4,"line_end":4,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"use std::time::{SystemTime, UNIX_EPOCH};","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\storage\\file_storage.rs","byte_start":114,"byte_end":115,"line_start":4,"line_end":4,"column_start":39,"column_end":40,"is_primary":true,"text":[{"text":"use std::time::{SystemTime, UNIX_EPOCH};","highlight_start":39,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `SystemTime`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\storage\\file_storage.rs:4:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::{SystemTime, UNIX_EPOCH};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `warp::reply::Response`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\auth\\session.rs","byte_start":216,"byte_end":237,"line_start":7,"line_end":7,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use warp::reply::Response;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\auth\\session.rs","byte_start":212,"byte_end":240,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use warp::reply::Response;","highlight_start":1,"highlight_end":27},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `warp::reply::Response`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\auth\\session.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse warp::reply::Response;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::storage::file_storage::FileStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":600,"byte_end":641,"line_start":26,"line_end":26,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"use crate::storage::file_storage::FileStorage;","highlight_start":5,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":596,"byte_end":644,"line_start":26,"line_end":27,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::storage::file_storage::FileStorage;","highlight_start":1,"highlight_end":47},{"text":"use crate::editor::extensions::{initialize_extensions, add_extension, list_extensions, CustomExtension};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::storage::file_storage::FileStorage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::storage::file_storage::FileStorage;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `with_session`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":813,"byte_end":825,"line_start":28,"line_end":28,"column_start":64,"column_end":76,"is_primary":true,"text":[{"text":"use crate::auth::session::{create_session, invalidate_session, with_session};","highlight_start":64,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":811,"byte_end":825,"line_start":28,"line_end":28,"column_start":62,"column_end":76,"is_primary":true,"text":[{"text":"use crate::auth::session::{create_session, invalidate_session, with_session};","highlight_start":62,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `with_session`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:28:64\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::auth::session::{create_session, invalidate_session, with_session};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":4437,"byte_end":4453,"line_start":123,"line_end":123,"column_start":56,"column_end":72,"is_primary":true,"text":[{"text":"    let session_id = create_session(client_id.clone(), sessions.clone()).await.unwrap();","highlight_start":56,"highlight_end":72}],"label":"expected `Arc<Mutex<HashMap<String, ...>>>`, found `Arc<Mutex<HashMap<String, String>>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":4403,"byte_end":4417,"line_start":123,"line_end":123,"column_start":22,"column_end":36,"is_primary":false,"text":[{"text":"    let session_id = create_session(client_id.clone(), sessions.clone()).await.unwrap();","highlight_start":22,"highlight_end":36}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, UserSession>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::string::String>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\auth\\session.rs","byte_start":1891,"byte_end":1918,"line_start":60,"line_end":60,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    session_store: SessionStore,","highlight_start":5,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\auth\\session.rs","byte_start":1848,"byte_end":1862,"line_start":58,"line_end":58,"column_start":14,"column_end":28,"is_primary":true,"text":[{"text":"pub async fn create_session(","highlight_start":14,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:123:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let session_id = create_session(client_id.clone(), sessions.clone()).await.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Arc<Mutex<HashMap<String, ...>>>`, found `Arc<Mutex<HashMap<String, String>>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mUserSession\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::string::String\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\auth\\session.rs:58:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn create_session(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    user_id: String,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    session_store: SessionStore,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\auth\\session.rs","byte_start":1933,"byte_end":1943,"line_start":61,"line_end":61,"column_start":13,"column_end":23,"is_primary":false,"text":[{"text":") -> Result<impl Reply, Rejection> {","highlight_start":13,"highlight_end":23}],"label":"the found opaque type","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\auth\\session.rs","byte_start":1933,"byte_end":1943,"line_start":61,"line_end":61,"column_start":13,"column_end":23,"is_primary":false,"text":[{"text":") -> Result<impl Reply, Rejection> {","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":6785,"byte_end":6803,"line_start":186,"line_end":186,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    invalidate_session(session_id, sessions.clone()).await.unwrap();","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `String`, found opaque type","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":6804,"byte_end":6814,"line_start":186,"line_end":186,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"    invalidate_session(session_id, sessions.clone()).await.unwrap();","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"  expected struct `std::string::String`\nfound opaque type `impl Reply`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected `Arc<Mutex<HashMap<String, ...>>>`, found `Arc<Mutex<HashMap<String, String>>>`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":6816,"byte_end":6832,"line_start":186,"line_end":186,"column_start":36,"column_end":52,"is_primary":true,"text":[{"text":"    invalidate_session(session_id, sessions.clone()).await.unwrap();","highlight_start":36,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, UserSession>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::string::String>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\auth\\session.rs","byte_start":3367,"byte_end":3385,"line_start":97,"line_end":97,"column_start":5,"column_end":23,"is_primary":false,"text":[{"text":"    session_id: String,","highlight_start":5,"highlight_end":23}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\auth\\session.rs","byte_start":3392,"byte_end":3419,"line_start":98,"line_end":98,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    session_store: SessionStore,","highlight_start":5,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\auth\\session.rs","byte_start":3342,"byte_end":3360,"line_start":96,"line_end":96,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"pub async fn invalidate_session(","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:186:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    invalidate_session(session_id, sessions.clone()).await.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\auth\\session.rs:61:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Result<impl Reply, Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthe found opaque type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `String`, found opaque type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:186:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    invalidate_session(session_id, sessions.clone()).await.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::string::String\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found opaque type `\u001b[0m\u001b[0m\u001b[1m\u001b[35mimpl Reply\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Arc<Mutex<HashMap<String, ...>>>`, found `Arc<Mutex<HashMap<String, String>>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:186:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    invalidate_session(session_id, sessions.clone()).await.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mUserSession\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::string::String\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\auth\\session.rs:96:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn invalidate_session(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    session_id: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    session_store: SessionStore,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `file_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":8425,"byte_end":8434,"line_start":224,"line_end":224,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let file_name = query.get(\"file\").unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":8425,"byte_end":8434,"line_start":224,"line_end":224,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let file_name = query.get(\"file\").unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_file_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `file_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let file_name = query.get(\"file\").unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_file_name`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8760,"byte_end":8771,"line_start":231,"line_end":231,"column_start":31,"column_end":42,"is_primary":false,"text":[{"text":"    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;","highlight_start":31,"highlight_end":42}],"label":"expected `Theme`, found `&String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":8734,"byte_end":8743,"line_start":231,"line_end":231,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Arc<Mutex<HashMap<String, Theme>>>`, found `Arc<Mutex<HashMap<String, String>>>`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":8744,"byte_end":8758,"line_start":231,"line_end":231,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;","highlight_start":15,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, Theme>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::string::String>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\storage\\theme.rs","byte_start":1381,"byte_end":1395,"line_start":50,"line_end":50,"column_start":18,"column_end":32,"is_primary":false,"text":[{"text":"pub fn set_theme(themes: Themes, new_theme: Theme) -> Result<(), &'static str> {","highlight_start":18,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\storage\\theme.rs","byte_start":1397,"byte_end":1413,"line_start":50,"line_end":50,"column_start":34,"column_end":50,"is_primary":false,"text":[{"text":"pub fn set_theme(themes: Themes, new_theme: Theme) -> Result<(), &'static str> {","highlight_start":34,"highlight_end":50}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\storage\\theme.rs","byte_start":1371,"byte_end":1380,"line_start":50,"line_end":50,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn set_theme(themes: Themes, new_theme: Theme) -> Result<(), &'static str> {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:231:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `Theme`, found `&String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Arc<Mutex<HashMap<String, Theme>>>`, found `Arc<Mutex<HashMap<String, String>>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:231:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mTheme\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::string::String\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\storage\\theme.rs:50:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m50\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn set_theme(themes: Themes, new_theme: Theme) -> Result<(), &'static str> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `&str: warp::reject::Reject` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":8808,"byte_end":8811,"line_start":231,"line_end":231,"column_start":79,"column_end":82,"is_primary":true,"text":[{"text":"    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;","highlight_start":79,"highlight_end":82}],"label":"the trait `warp::reject::Reject` is not implemented for `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":8787,"byte_end":8807,"line_start":231,"line_end":231,"column_start":58,"column_end":78,"is_primary":false,"text":[{"text":"    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;","highlight_start":58,"highlight_end":78}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `warp::reject::custom`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\reject.rs","byte_start":4296,"byte_end":4302,"line_start":143,"line_end":143,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"pub fn custom<T: Reject>(err: T) -> Rejection {","highlight_start":18,"highlight_end":24}],"label":"required by this bound in `custom`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `&str: warp::reject::Reject` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:231:79\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    set_theme(themes.clone(), &theme_name).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `warp::reject::Reject` is not implemented for `&str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `warp::reject::custom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\reject.rs:143:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn custom<T: Reject>(err: T) -> Rejection {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `custom`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9075,"byte_end":9089,"line_start":237,"line_end":237,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"    if let Some(theme) = get_theme(themes.clone(), &theme_name) {","highlight_start":36,"highlight_end":50}],"label":"expected `Arc<Mutex<HashMap<String, Theme>>>`, found `Arc<Mutex<HashMap<String, String>>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9065,"byte_end":9074,"line_start":237,"line_end":237,"column_start":26,"column_end":35,"is_primary":false,"text":[{"text":"    if let Some(theme) = get_theme(themes.clone(), &theme_name) {","highlight_start":26,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, Theme>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::string::String>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\storage\\theme.rs","byte_start":1186,"byte_end":1200,"line_start":44,"line_end":44,"column_start":18,"column_end":32,"is_primary":false,"text":[{"text":"pub fn get_theme(themes: Themes, theme_name: &str) -> Option<Theme> {","highlight_start":18,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\storage\\theme.rs","byte_start":1176,"byte_end":1185,"line_start":44,"line_end":44,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn get_theme(themes: Themes, theme_name: &str) -> Option<Theme> {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:237:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(theme) = get_theme(themes.clone(), &theme_name) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Arc<Mutex<HashMap<String, Theme>>>`, found `Arc<Mutex<HashMap<String, String>>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mTheme\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::string::String\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\storage\\theme.rs:44:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn get_theme(themes: Themes, theme_name: &str) -> Option<Theme> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9390,"byte_end":9408,"line_start":246,"line_end":246,"column_start":43,"column_end":61,"is_primary":true,"text":[{"text":"    let extensions_list = list_extensions(extensions.clone());","highlight_start":43,"highlight_end":61}],"label":"expected `Arc<dyn Extension>`, found `Box<dyn Send + Sync>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9374,"byte_end":9389,"line_start":246,"line_end":246,"column_start":27,"column_end":42,"is_primary":false,"text":[{"text":"    let extensions_list = list_extensions(extensions.clone());","highlight_start":27,"highlight_end":42}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::sync::Arc<(dyn Extension + 'static)>>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, Box<(dyn std::marker::Send + Sync + 'static)>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\editor\\extensions.rs","byte_start":2683,"byte_end":2714,"line_start":79,"line_end":79,"column_start":24,"column_end":55,"is_primary":false,"text":[{"text":"pub fn list_extensions(extension_store: ExtensionStore) -> Vec<String> {","highlight_start":24,"highlight_end":55}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\editor\\extensions.rs","byte_start":2667,"byte_end":2682,"line_start":79,"line_end":79,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn list_extensions(extension_store: ExtensionStore) -> Vec<String> {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:246:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let extensions_list = list_extensions(extensions.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Arc<dyn Extension>`, found `Box<dyn Send + Sync>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<(dyn Extension + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mBox<(dyn std::marker::Send + Sync + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor\\extensions.rs:79:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn list_extensions(extension_store: ExtensionStore) -> Vec<String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9644,"byte_end":9657,"line_start":252,"line_end":252,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Arc<dyn Extension>`, found `Box<dyn Send + Sync>`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":9658,"byte_end":9676,"line_start":252,"line_end":252,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::sync::Arc<(dyn Extension + 'static)>>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, Box<(dyn std::marker::Send + Sync + 'static)>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"expected `Arc<dyn Extension>`, found `CustomExtension`","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":9678,"byte_end":9691,"line_start":252,"line_end":252,"column_start":39,"column_end":52,"is_primary":true,"text":[{"text":"    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;","highlight_start":39,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected struct `std::sync::Arc<(dyn Extension + 'static)>`\n   found struct `extensions::CustomExtension`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src\\editor\\extensions.rs","byte_start":1876,"byte_end":1907,"line_start":56,"line_end":56,"column_start":22,"column_end":53,"is_primary":false,"text":[{"text":"pub fn add_extension(extension_store: ExtensionStore, extension: Arc<dyn Extension>) -> Result<(), String> {","highlight_start":22,"highlight_end":53}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\editor\\extensions.rs","byte_start":1909,"byte_end":1938,"line_start":56,"line_end":56,"column_start":55,"column_end":84,"is_primary":false,"text":[{"text":"pub fn add_extension(extension_store: ExtensionStore, extension: Arc<dyn Extension>) -> Result<(), String> {","highlight_start":55,"highlight_end":84}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\editor\\extensions.rs","byte_start":1862,"byte_end":1875,"line_start":56,"line_end":56,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"pub fn add_extension(extension_store: ExtensionStore, extension: Arc<dyn Extension>) -> Result<(), String> {","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:252:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Arc<dyn Extension>`, found `Box<dyn Send + Sync>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:252:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<(dyn Extension + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mBox<(dyn std::marker::Send + Sync + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Arc<dyn Extension>`, found `CustomExtension`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:252:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<(dyn Extension + 'static)>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mextensions::CustomExtension\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\editor\\extensions.rs:56:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn add_extension(extension_store: ExtensionStore, extension: Arc<dyn Extension>) -> Result<(), String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::string::String: warp::reject::Reject` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":9728,"byte_end":9731,"line_start":252,"line_end":252,"column_start":89,"column_end":92,"is_primary":true,"text":[{"text":"    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;","highlight_start":89,"highlight_end":92}],"label":"the trait `warp::reject::Reject` is not implemented for `std::string::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9707,"byte_end":9727,"line_start":252,"line_end":252,"column_start":68,"column_end":88,"is_primary":false,"text":[{"text":"    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;","highlight_start":68,"highlight_end":88}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `warp::reject::custom`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\reject.rs","byte_start":4296,"byte_end":4302,"line_start":143,"line_end":143,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"pub fn custom<T: Reject>(err: T) -> Rejection {","highlight_start":18,"highlight_end":24}],"label":"required by this bound in `custom`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `std::string::String: warp::reject::Reject` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:252:89\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    add_extension(extensions.clone(), new_extension).map_err(|err| warp::reject::custom(err))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `warp::reject::Reject` is not implemented for `std::string::String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `warp::reject::custom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\reject.rs:143:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn custom<T: Reject>(err: T) -> Rejection {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `custom`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1714,"byte_end":1737,"line_start":47,"line_end":47,"column_start":34,"column_end":57,"is_primary":true,"text":[{"text":"    let extensions: Extensions = initialize_extensions(); // Initialize available extensions","highlight_start":34,"highlight_end":57}],"label":"expected `Box<dyn Send + Sync>`, found `Arc<dyn Extension>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1701,"byte_end":1711,"line_start":47,"line_end":47,"column_start":21,"column_end":31,"is_primary":false,"text":[{"text":"    let extensions: Extensions = initialize_extensions(); // Initialize available extensions","highlight_start":21,"highlight_end":31}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, Box<(dyn std::marker::Send + Sync + 'static)>>>>`\n   found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, std::sync::Arc<(dyn Extension + 'static)>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:47:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let extensions: Extensions = initialize_extensions(); // Initialize available extensions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Box<dyn Send + Sync>`, found `Arc<dyn Extension>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected due to this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mBox<(dyn std::marker::Send + Sync + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m              found struct `std::sync::Arc<std::sync::Mutex<HashMap<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<(dyn Extension + 'static)>\u001b[0m\u001b[0m>>>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected `impl Future<Output = Result<(), Rejection>>` to be a future that resolves to `()`, but it resolves to `Result<(), Rejection>`","code":{"code":"E0271","explanation":"A type mismatched an associated type of a trait.\n\nErroneous code example:\n\n```compile_fail,E0271\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType=u32> {\n//                    ~~~~~~~~ ~~~~~~~~~~~~~~~~~~\n//                        |            |\n//         This says `foo` can         |\n//           only be used with         |\n//              some type that         |\n//         implements `Trait`.         |\n//                                     |\n//                             This says not only must\n//                             `T` be an impl of `Trait`\n//                             but also that the impl\n//                             must assign the type `u32`\n//                             to the associated type.\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n```\n\nThe issue can be resolved by changing the associated type:\n1) in the `foo` implementation:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = &'static str> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = &'static str; }\n\nfoo(3_i8);\n```\n\n2) in the `Trait` implementation for `i8`:\n```\ntrait Trait { type AssociatedType; }\n\nfn foo<T>(t: T) where T: Trait<AssociatedType = u32> {\n    println!(\"in foo\");\n}\n\nimpl Trait for i8 { type AssociatedType = u32; }\n\nfoo(3_i8);\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2327,"byte_end":2337,"line_start":62,"line_end":62,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"            ws.on_upgrade(move |socket| handle_websocket(socket, clients, tx, sessions))","highlight_start":16,"highlight_end":26}],"label":"expected `()`, found `Result<(), Rejection>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected unit type `()`\n        found enum `Result<(), Rejection>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Ws::on_upgrade`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filters\\ws.rs","byte_start":2565,"byte_end":2575,"line_start":81,"line_end":81,"column_start":12,"column_end":22,"is_primary":false,"text":[{"text":"    pub fn on_upgrade<F, U>(self, func: F) -> impl Reply","highlight_start":12,"highlight_end":22}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filters\\ws.rs","byte_start":2691,"byte_end":2702,"line_start":84,"line_end":84,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        U: Future<Output = ()> + Send + 'static,","highlight_start":19,"highlight_end":30}],"label":"required by this bound in `Ws::on_upgrade`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0271]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `impl Future<Output = Result<(), Rejection>>` to be a future that resolves to `()`, but it resolves to `Result<(), Rejection>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:62:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ws.on_upgrade(move |socket| handle_websocket(socket, clients, tx, sessions))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found `Result<(), Rejection>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                   found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<(), Rejection>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Ws::on_upgrade`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filters\\ws.rs:84:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn on_upgrade<F, U>(self, func: F) -> impl Reply\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        U: Future<Output = ()> + Send + 'static,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Ws::on_upgrade`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`impl Reply` is not a future","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2258,"byte_end":2266,"line_start":61,"line_end":61,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(|ws: warp::ws::Ws, clients, tx, sessions| {","highlight_start":10,"highlight_end":18}],"label":"`impl Reply` is not a future","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `warp::Future` is not implemented for `impl Reply`, which is required by `impl Reply: TryFuture`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `impl Reply` to implement `TryFuture`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `impl Reply` is not a future\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:61:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(|ws: warp::ws::Ws, clients, tx, sessions| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`impl Reply` is not a future\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `warp::Future` is not implemented for `impl Reply`, which is required by `impl Reply: TryFuture`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `impl Reply` to implement `TryFuture`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3007,"byte_end":3015,"line_start":81,"line_end":81,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(handle_set_theme);","highlight_start":10,"highlight_end":18}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":8620,"byte_end":8726,"line_start":230,"line_end":230,"column_start":1,"column_end":107,"is_primary":false,"text":[{"text":"async fn handle_set_theme(themes: Themes, theme_name: String) -> Result<impl warp::Reply, warp::Rejection> {","highlight_start":1,"highlight_end":107}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>) -> _`\n   found function signature `fn(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>, std::string::String) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `fn(Arc<Mutex<HashMap<String, String>>>, String) -> impl Future<Output = Result<..., ...>> {handle_set_theme}` to implement `warp::generic::Func<(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-2409934783287861313.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in function arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:81:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(handle_set_theme);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn handle_set_theme(themes: Themes, theme_name: String) -> Result<impl warp::Reply, warp::Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected function signature `fn(std::\u001b[0m\u001b[0m\u001b[1m\u001b[35mstring::String\u001b[0m\u001b[0m, std::\u001b[0m\u001b[0m\u001b[1m\u001b[35msync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found function signature `fn(std::\u001b[0m\u001b[0m\u001b[1m\u001b[35msync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>\u001b[0m\u001b[0m, std::\u001b[0m\u001b[0m\u001b[1m\u001b[35mstring::String\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `fn(Arc<Mutex<HashMap<String, String>>>, String) -> impl Future<Output = Result<..., ...>> {handle_set_theme}` to implement `warp::generic::Func<(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>)>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-2409934783287861313.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3151,"byte_end":3159,"line_start":85,"line_end":85,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(handle_get_theme);","highlight_start":10,"highlight_end":18}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":8930,"byte_end":9036,"line_start":236,"line_end":236,"column_start":1,"column_end":107,"is_primary":false,"text":[{"text":"async fn handle_get_theme(themes: Themes, theme_name: String) -> Result<impl warp::Reply, warp::Rejection> {","highlight_start":1,"highlight_end":107}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>) -> _`\n   found function signature `fn(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>, std::string::String) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `fn(Arc<Mutex<HashMap<String, String>>>, String) -> impl Future<Output = Result<..., ...>> {handle_get_theme}` to implement `warp::generic::Func<(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-15450971971268331757.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in function arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:85:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m85\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(handle_get_theme);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn handle_get_theme(themes: Themes, theme_name: String) -> Result<impl warp::Reply, warp::Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected function signature `fn(std::\u001b[0m\u001b[0m\u001b[1m\u001b[35mstring::String\u001b[0m\u001b[0m, std::\u001b[0m\u001b[0m\u001b[1m\u001b[35msync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found function signature `fn(std::\u001b[0m\u001b[0m\u001b[1m\u001b[35msync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>\u001b[0m\u001b[0m, std::\u001b[0m\u001b[0m\u001b[1m\u001b[35mstring::String\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `fn(Arc<Mutex<HashMap<String, String>>>, String) -> impl Future<Output = Result<..., ...>> {handle_get_theme}` to implement `warp::generic::Func<(std::string::String, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>)>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-15450971971268331757.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3559,"byte_end":3567,"line_start":96,"line_end":96,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"        .and_then(handle_add_extension);","highlight_start":10,"highlight_end":18}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9506,"byte_end":9636,"line_start":251,"line_end":251,"column_start":1,"column_end":131,"is_primary":false,"text":[{"text":"async fn handle_add_extension(extensions: Extensions, new_extension: CustomExtension) -> Result<impl warp::Reply, warp::Rejection> {","highlight_start":1,"highlight_end":131}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(std::sync::Arc<_>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>) -> _`\n   found function signature `fn(std::sync::Arc<_>, extensions::CustomExtension) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `fn(Arc<Mutex<HashMap<String, Box<dyn Send + Sync>>>>, CustomExtension) -> ... {handle_add_extension}` to implement `warp::generic::Func<(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-7254115085571995249.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in function arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:96:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(handle_add_extension);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn handle_add_extension(extensions: Extensions, new_extension: CustomExtension) -> Result<impl warp::Reply, warp::Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected function signature `fn(std::sync::Arc<_>, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found function signature `fn(std::sync::Arc<_>, \u001b[0m\u001b[0m\u001b[1m\u001b[35mextensions::CustomExtension\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `fn(Arc<Mutex<HashMap<String, Box<dyn Send + Sync>>>>, CustomExtension) -> ... {handle_add_extension}` to implement `warp::generic::Func<(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>)>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-7254115085571995249.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type mismatch in function arguments","code":{"code":"E0631","explanation":"This error indicates a type mismatch in closure arguments.\n\nErroneous code example:\n\n```compile_fail,E0631\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: &str| {});\n}\n```\n\nThe error occurs because `foo` accepts a closure that takes an `i32` argument,\nbut in `main`, it is passed a closure with a `&str` argument.\n\nThis can be resolved by changing the type annotation or removing it entirely\nif it can be inferred.\n\n```\nfn foo<F: Fn(i32)>(f: F) {\n}\n\nfn main() {\n    foo(|x: i32| {});\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3568,"byte_end":3588,"line_start":96,"line_end":96,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"        .and_then(handle_add_extension);","highlight_start":19,"highlight_end":39}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9506,"byte_end":9636,"line_start":251,"line_end":251,"column_start":1,"column_end":131,"is_primary":false,"text":[{"text":"async fn handle_add_extension(extensions: Extensions, new_extension: CustomExtension) -> Result<impl warp::Reply, warp::Rejection> {","highlight_start":1,"highlight_end":131}],"label":"found signature defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3559,"byte_end":3567,"line_start":96,"line_end":96,"column_start":10,"column_end":18,"is_primary":false,"text":[{"text":"        .and_then(handle_add_extension);","highlight_start":10,"highlight_end":18}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected function signature `fn(std::sync::Arc<_>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>) -> _`\n   found function signature `fn(std::sync::Arc<_>, extensions::CustomExtension) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `fn(Arc<Mutex<HashMap<String, Box<dyn Send + Sync>>>>, CustomExtension) -> ... {handle_add_extension}` to implement `warp::generic::Func<(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `warp::Filter::and_then`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filter\\mod.rs","byte_start":7921,"byte_end":7929,"line_start":255,"line_end":255,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn and_then<F>(self, fun: F) -> AndThen<Self, F>","highlight_start":8,"highlight_end":16}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filter\\mod.rs","byte_start":8009,"byte_end":8028,"line_start":258,"line_end":258,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"        F: Func<Self::Extract> + Clone,","highlight_start":12,"highlight_end":31}],"label":"required by this bound in `Filter::and_then`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-7254115085571995249.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider wrapping the function in a closure","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":3568,"byte_end":3568,"line_start":96,"line_end":96,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"        .and_then(handle_add_extension);","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"|arg0: std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, arg1: std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>| ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":3588,"byte_end":3588,"line_start":96,"line_end":96,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"        .and_then(handle_add_extension);","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":"(arg0, /* extensions::CustomExtension */)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0631]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type mismatch in function arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:96:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and_then(handle_add_extension);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0masync fn handle_add_extension(extensions: Extensions, new_extension: CustomExtension) -> Result<impl warp::Reply, warp::Rejection> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------------------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfound signature defined here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected function signature `fn(std::sync::Arc<_>, \u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found function signature `fn(std::sync::Arc<_>, \u001b[0m\u001b[0m\u001b[1m\u001b[35mextensions::CustomExtension\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[1m\u001b[35m_\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `fn(Arc<Mutex<HashMap<String, Box<dyn Send + Sync>>>>, CustomExtension) -> ... {handle_add_extension}` to implement `warp::generic::Func<(std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `warp::Filter::and_then`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filter\\mod.rs:258:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn and_then<F>(self, fun: F) -> AndThen<Self, F>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: Func<Self::Extract> + Clone,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Filter::and_then`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-7254115085571995249.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider wrapping the function in a closure\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        .and_then(\u001b[0m\u001b[0m\u001b[38;5;10m|arg0: std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>, arg1: std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>| \u001b[0m\u001b[0mhandle_add_extension\u001b[0m\u001b[0m\u001b[38;5;10m(arg0, /* extensions::CustomExtension */)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>: DeserializeOwned` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3478,"byte_end":3496,"line_start":94,"line_end":94,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"        .and(warp::body::json())","highlight_start":14,"highlight_end":32}],"label":"the trait `for<'de> Deserialize<'de>` is not implemented for `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>`, which is required by `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required for `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>` to implement `DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `warp::body::json`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filters\\body.rs","byte_start":5406,"byte_end":5422,"line_start":172,"line_end":172,"column_start":16,"column_end":32,"is_primary":true,"text":[{"text":"pub fn json<T: DeserializeOwned + Send>() -> impl Filter<Extract = (T,), Error = Rejection> + Copy {","highlight_start":16,"highlight_end":32}],"label":"required by this bound in `json`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>: DeserializeOwned` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:94:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .and(warp::body::json())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `for<'de> Deserialize<'de>` is not implemented for `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>`, which is required by `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, Box<(dyn std::marker::Send + Sync + 'static)>>>>` to implement `DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `warp::body::json`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filters\\body.rs:172:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn json<T: DeserializeOwned + Send>() -> impl Filter<Extract = (T,), Error = Rejection> + Copy {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `json`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `or` exists for struct `Or<impl FilterClone + FilterBase<Extract = (File,), Error = Rejection>, AndThen<And<And<..., ...>, ...>, ...>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":3638,"byte_end":3684,"line_start":99,"line_end":101,"column_start":18,"column_end":10,"is_primary":false,"text":[{"text":"    let routes = static_files","highlight_start":18,"highlight_end":30},{"text":"        .or(ws_route)","highlight_start":1,"highlight_end":22},{"text":"        .or(save_file_route)","highlight_start":1,"highlight_end":10}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":3684,"byte_end":3686,"line_start":101,"line_end":101,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"        .or(save_file_route)","highlight_start":10,"highlight_end":12}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filter\\or.rs","byte_start":368,"byte_end":387,"line_start":16,"line_end":16,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Or<T, U> {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `_: FilterBase` or `_: Filter`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the full type name has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-17239724184136713715.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following trait bounds were not satisfied:\n`warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\nwhich is required by `warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`\n`&warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\nwhich is required by `&warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`\n`&mut warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\nwhich is required by `&mut warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `or` exists for struct `Or<impl FilterClone + FilterBase<Extract = (File,), Error = Rejection>, AndThen<And<And<..., ...>, ...>, ...>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let routes = static_files\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(ws_route)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .or(save_file_route)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\Aditya singh\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\warp-0.3.7\\src\\filter\\or.rs:16:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Or<T, U> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `_: FilterBase` or `_: Filter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full type name has been written to 'C:\\Users\\Aditya singh\\RustPad\\rustpad\\target\\debug\\deps\\rustpad-03ef81309210ceb5.long-type-17239724184136713715.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`\u001b[0m\n\u001b[0m            `&warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`\u001b[0m\n\u001b[0m            `&mut warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::filter::FilterBase`\u001b[0m\n\u001b[0m            which is required by `&mut warp::filter::or::Or<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (Ws,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, UnboundedSender<warp::ws::Message>>>>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (tokio::sync::broadcast::Sender<DocumentUpdate>,), Error = Infallible> + Clone>, impl warp::Filter + warp::filter::FilterBase<Extract = (std::sync::Arc<std::sync::Mutex<HashMap<std::string::String, std::string::String>>>,), Error = Infallible> + Clone>, {closure@src/main.rs:61:19: 61:60}>>: warp::Filter`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 19 previous errors; 5 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 19 previous errors; 5 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0271, E0277, E0308, E0412, E0425, E0599, E0631.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0271, E0277, E0308, E0412, E0425, E0599, E0631.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0271`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0271`.\u001b[0m\n"}
